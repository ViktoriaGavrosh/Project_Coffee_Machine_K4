//The program looped to terminate only if the user inputs "exit"

package machine

fun main() {
    val machine = CoffeeMachine(400, 540, 120, 9, 550)
   
    machine.menu()
}

class CoffeeMachine(var water: Int, var milk: Int, var coffeeBeans: Int, var cups: Int, var money: Int) {
    
    fun menu() {
        loop@while(true) {
            println("Write action (buy, fill, take, remaining, exit):")
            when(readLine()!!) {
                "buy" -> buyCoffee()
                "fill" -> fillCoffeeMachine()
                "take" -> takeMoney()
                "remaining" -> printStateMachine()
                "exit" -> break@loop
            }
        }
    }
    
    fun makeCoffee(coffee: Coffee) {
        water -= coffee.water
        milk -= coffee.milk
        coffeeBeans -= coffee.coffeeBeans
        cups--
        money += coffee.price
        println("I have enough resources, making you a coffee!")
    }
    
    fun printStateMachine() {
        println("The coffee machine has:\n$water ml of water")
        println("$milk ml of milk\n$coffeeBeans g of coffee beans")
        println("$cups disposable cups\n$money of money")
    }
    
    fun buyCoffee() {
        println("What do you want to buy? 1 - espresso, 2 - latte, 3 - cappuccino, back - to main menu:")
        val choose = when(readLine()!!) {
            "1" -> Coffee.ESPRESSO
            "2" -> Coffee.LATTE
            "3" -> Coffee.CAPPUCCINO
            "back" -> return
            else -> return
        }
        if(checkResources(choose)) makeCoffee(choose)
    }
    
    fun checkResources(coffee: Coffee): Boolean {
        var notEnough = ""
        if (water < coffee.water) notEnough += " water,"
        if (milk < coffee.milk) notEnough += " milk,"
        if (coffeeBeans < coffee.coffeeBeans) notEnough += " coffee beans,"
        if (cups < 1) notEnough += " disposable cups,"
        
        if (notEnough.length == 0) { 
            return true
        } else {
            println("Sorry, not enough${notEnough.substring(0, notEnough.lastIndex)}!")
            return false
        }
    }
    
    fun takeMoney() {
        println("I gave you $money")
        money = 0
    }
    
    fun fillCoffeeMachine() {
        println("Write how many ml of water you want to add:")
        water += readLine()!!.toInt()
        println("Write how many ml of milk you want to add:")
        milk += readLine()!!.toInt()
        println("Write how many grams of coffee beans you want to add:")
        coffeeBeans += readLine()!!.toInt()
        println("Write how many disposable cups you want to add:")
        cups += readLine()!!.toInt()
    }
}

enum class Coffee(val water: Int, val milk: Int, val coffeeBeans: Int, val price: Int) {
    ESPRESSO(250, 0, 16, 4),
    LATTE(350, 75, 20, 7), 
    CAPPUCCINO(200, 100, 12, 6)
}

